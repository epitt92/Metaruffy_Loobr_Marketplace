import React, { useState, useEffect } from 'react';
import Image from 'next/image';
import Button from '../Button/Button';
import Input from '../input/Input';

import { useDispatch, useSelector } from 'react-redux';
import { createFeed } from '../../redux/user/actions';
import { toast } from 'react-toastify';
import axios from 'axios';
import { MentionsInput, Mention } from 'react-mentions';
import { fetchImage } from '../../utils/functions';
import ImageComponent from '../Image/ImageComponent';
import { TRANSFORMATION_NAMES } from '../../constants/enums';
const Uploadimg = ({ setstate, setPopup, nft, setConfirmed, setNft }: any) => {
    const user = useSelector((state: any) => state.auth.user);
    const allUsers = useSelector((state: any) => state.chat.allusers);
    const [values, setValues] = useState({
        text: '',
        user: user.userId
    });

    const [file, setFile] = useState<any>(null);
    const [type, setType] = useState<string>('');
    const [src, setSrc] = useState<any>();
    const [loadinglocal, setLoading] = useState(false);
    const loading = useSelector((state: any) => state.user.loadingcreatefeed);
    const dispatch = useDispatch();

    const UploadImage = async () => {
        setLoading(true);
        const data = new FormData();

        if (!file && !values.text && !nft) {
            toast.error('No image or text added');
        } else if (file) {
            data.append('text', values.text);
            data.append('user', values.user);
            data.append('file', file);
            data.append('type', type);
            //@ts-ignore
            dispatch(createFeed(data, setstate, setConfirmed));
        } else if (nft) {
            // data.append("text", values.text);
            data.append('user', values.user);
            data.append('nft', nft._id);
            data.append('type', 'nft');
            // data.append("type", type)
            //@ts-ignore
            dispatch(createFeed(data, setstate, setConfirmed));
        } else {
            data.append('text', values.text);
            data.append('user', values.user);
            data.append('type', 'text');
            //@ts-ignore
            dispatch(createFeed(data, setstate, setConfirmed));
        }
    };
    const convertToBase64 = (file: any) => {
        return new Promise((resolve) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => {
                resolve(reader.result);
            };
        });
    };

    return (
        <div className="lg:w-[840px] md:w-[740px] sm:w-[594px]  auto w-full  ">
            <div className="p-6 flex items-start">
                <figure className="w-14 h-14 rounded-full UerProfileImage flex items-center justify-center">
                    {user?.avatar ? (
                        <ImageComponent
                            width={56}
                            height={56}
                            className="rounded-full"
                            src={user?.avatar}
                            alt=""
                            transformation={TRANSFORMATION_NAMES.fit_50x50}
                        />
                    ) : (
                        <p className="w-full h-full bg-themecolor flex items-center justify-center rounded-full flex-shrink-0 text-black1 text-2xl">
                            {user?.firstName?.charAt(0).toUpperCase()}
                        </p>
                    )}
                </figure>
                <textarea
                    className="  border !border-none bg-transparent braek w-full resize-none !text-themecolor !text-2xl !font-[400] !font-Proxima-Regular ml-4 pt-[10px] focus:outline-none"
                    placeholder="Write something..."
                    value={nft && nft?.nft?.description ? nft.nft.description : values.text}
                    onChange={(e: any) => {
                        setValues({ ...values, text: e.target.value });
                    }}></textarea>
                {/* <Input className="" placeholder="Write Something..." styles=" border !border-none  !text-[#89898F] !text-2xl !font-[400] !font-Proxima-Regular ml-4" onchange={(e: any) => { setValues({ ...values, text: e.target.value }) }} /> */}
            </div>

            <div className="mb-10 pl-6 pr-6">
                {file ? (
                    <>
                        {type == 'image' ? (
                            <div className="ChooseFullImage relative rounded-xl bg-[#2B2B35] overflow-hidden">
                                <div
                                    className="absolute top-0 right-[0px] cursor-pointer z-10"
                                    onClick={() => {
                                        setFile(null);
                                        setType('');
                                    }}>
                                    <svg
                                        width="46"
                                        height="46"
                                        viewBox="0 0 46 46"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <circle cx="23" cy="23" r="23" transform="rotate(-180 23 23)" fill="#363642" />
                                        <path
                                            fillRule="evenodd"
                                            clipRule="evenodd"
                                            d="M30.5023 15.4966C30.8013 15.7956 30.9692 16.2011 30.9692 16.6239C30.9692 17.0467 30.8013 17.4522 30.5023 17.7513L25.2496 23.0006L30.5023 28.2498C30.8018 28.5493 30.97 28.9554 30.97 29.3788C30.97 29.8022 30.8018 30.2083 30.5023 30.5077C30.2029 30.8072 29.7968 30.9754 29.3733 30.9754C28.9499 30.9754 28.5438 30.8072 28.2443 30.5077L22.9948 25.2553L17.7452 30.5077C17.5969 30.656 17.4209 30.7736 17.2272 30.8538C17.0335 30.9341 16.8259 30.9754 16.6162 30.9754C16.4065 30.9754 16.1989 30.9341 16.0052 30.8538C15.8115 30.7736 15.6354 30.656 15.4872 30.5077C15.3389 30.3595 15.2213 30.1835 15.1411 29.9898C15.0608 29.7961 15.0195 29.5885 15.0195 29.3788C15.0195 29.1691 15.0608 28.9615 15.1411 28.7678C15.2213 28.5741 15.3389 28.3981 15.4872 28.2498L20.7399 23.0006L15.4872 17.7513C15.1878 17.4518 15.0195 17.0458 15.0195 16.6223C15.0195 16.1989 15.1878 15.7928 15.4872 15.4934C15.7866 15.1939 16.1927 15.0257 16.6162 15.0257C17.0396 15.0257 17.4458 15.1939 17.7452 15.4934L22.9948 20.7458L28.2443 15.4934C28.3925 15.3449 28.5684 15.2271 28.7622 15.1467C28.9559 15.0663 29.1636 15.0249 29.3733 15.0249C29.5831 15.0249 29.7908 15.0663 29.9845 15.1467C30.1782 15.2271 30.3542 15.3449 30.5023 15.4934V15.4966Z"
                                            fill="#777E91"
                                        />
                                    </svg>
                                </div>
                                <div className="NormalImage ">
                                    <Image width={200} height={200} src={URL.createObjectURL(file)} />
                                </div>
                                <div className="BluredImage">
                                    <Image width={200} height={200} src={URL.createObjectURL(file)} />
                                </div>
                            </div>
                        ) : (
                            <div className="ChooseFullImage relative rounded-xl bg-[#2B2B35] overflow-hidden">
                                <div
                                    className="absolute top-0 right-[0px] cursor-pointer z-10"
                                    onClick={() => {
                                        setFile(null);
                                        setType('');
                                    }}>
                                    <svg
                                        width="46"
                                        height="46"
                                        viewBox="0 0 46 46"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <circle cx="23" cy="23" r="23" transform="rotate(-180 23 23)" fill="#363642" />
                                        <path
                                            fillRule="evenodd"
                                            clipRule="evenodd"
                                            d="M30.5023 15.4966C30.8013 15.7956 30.9692 16.2011 30.9692 16.6239C30.9692 17.0467 30.8013 17.4522 30.5023 17.7513L25.2496 23.0006L30.5023 28.2498C30.8018 28.5493 30.97 28.9554 30.97 29.3788C30.97 29.8022 30.8018 30.2083 30.5023 30.5077C30.2029 30.8072 29.7968 30.9754 29.3733 30.9754C28.9499 30.9754 28.5438 30.8072 28.2443 30.5077L22.9948 25.2553L17.7452 30.5077C17.5969 30.656 17.4209 30.7736 17.2272 30.8538C17.0335 30.9341 16.8259 30.9754 16.6162 30.9754C16.4065 30.9754 16.1989 30.9341 16.0052 30.8538C15.8115 30.7736 15.6354 30.656 15.4872 30.5077C15.3389 30.3595 15.2213 30.1835 15.1411 29.9898C15.0608 29.7961 15.0195 29.5885 15.0195 29.3788C15.0195 29.1691 15.0608 28.9615 15.1411 28.7678C15.2213 28.5741 15.3389 28.3981 15.4872 28.2498L20.7399 23.0006L15.4872 17.7513C15.1878 17.4518 15.0195 17.0458 15.0195 16.6223C15.0195 16.1989 15.1878 15.7928 15.4872 15.4934C15.7866 15.1939 16.1927 15.0257 16.6162 15.0257C17.0396 15.0257 17.4458 15.1939 17.7452 15.4934L22.9948 20.7458L28.2443 15.4934C28.3925 15.3449 28.5684 15.2271 28.7622 15.1467C28.9559 15.0663 29.1636 15.0249 29.3733 15.0249C29.5831 15.0249 29.7908 15.0663 29.9845 15.1467C30.1782 15.2271 30.3542 15.3449 30.5023 15.4934V15.4966Z"
                                            fill="#777E91"
                                        />
                                    </svg>
                                </div>
                                <video
                                    id="video-summary"
                                    // autoPlay
                                    width={800}
                                    height={200}
                                    controls
                                    controlsList="nodownload"
                                    className="h-60"
                                    src={src}
                                />
                            </div>
                        )}
                    </>
                ) : (
                    <>
                        {nft ? (
                            <div className="ChooseFullImage relative rounded-xl bg-[#2B2B35] overflow-hidden">
                                <div
                                    className="absolute top-0 right-[0px] cursor-pointer z-10"
                                    onClick={() => {
                                        setNft();
                                        setType('');
                                    }}>
                                    <svg
                                        width="46"
                                        height="46"
                                        viewBox="0 0 46 46"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <circle cx="23" cy="23" r="23" transform="rotate(-180 23 23)" fill="#363642" />
                                        <path
                                            fillRule="evenodd"
                                            clipRule="evenodd"
                                            d="M30.5023 15.4966C30.8013 15.7956 30.9692 16.2011 30.9692 16.6239C30.9692 17.0467 30.8013 17.4522 30.5023 17.7513L25.2496 23.0006L30.5023 28.2498C30.8018 28.5493 30.97 28.9554 30.97 29.3788C30.97 29.8022 30.8018 30.2083 30.5023 30.5077C30.2029 30.8072 29.7968 30.9754 29.3733 30.9754C28.9499 30.9754 28.5438 30.8072 28.2443 30.5077L22.9948 25.2553L17.7452 30.5077C17.5969 30.656 17.4209 30.7736 17.2272 30.8538C17.0335 30.9341 16.8259 30.9754 16.6162 30.9754C16.4065 30.9754 16.1989 30.9341 16.0052 30.8538C15.8115 30.7736 15.6354 30.656 15.4872 30.5077C15.3389 30.3595 15.2213 30.1835 15.1411 29.9898C15.0608 29.7961 15.0195 29.5885 15.0195 29.3788C15.0195 29.1691 15.0608 28.9615 15.1411 28.7678C15.2213 28.5741 15.3389 28.3981 15.4872 28.2498L20.7399 23.0006L15.4872 17.7513C15.1878 17.4518 15.0195 17.0458 15.0195 16.6223C15.0195 16.1989 15.1878 15.7928 15.4872 15.4934C15.7866 15.1939 16.1927 15.0257 16.6162 15.0257C17.0396 15.0257 17.4458 15.1939 17.7452 15.4934L22.9948 20.7458L28.2443 15.4934C28.3925 15.3449 28.5684 15.2271 28.7622 15.1467C28.9559 15.0663 29.1636 15.0249 29.3733 15.0249C29.5831 15.0249 29.7908 15.0663 29.9845 15.1467C30.1782 15.2271 30.3542 15.3449 30.5023 15.4934V15.4966Z"
                                            fill="#777E91"
                                        />
                                    </svg>
                                </div>
                                <div className="NormalImage">
                                    <ImageComponent width={200} height={200} src={nft?.nft?.image} quality={50} />
                                </div>
                                <div className="BluredImage">
                                    <ImageComponent width={200} height={200} src={nft?.nft?.image} quality={50} />
                                </div>
                            </div>
                        ) : (
                            <>
                                <div className="flex flex-col items-center border justify-center p-8  w:[100%]  rounded-[1.625rem]  border-dashed border-[#43434C]">
                                    <svg
                                        width="62"
                                        height="49"
                                        viewBox="0 0 62 49"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <path
                                            d="M43 40H47.5C54.9558 40 61 33.9558 61 26.5C61 19.0442 54.9558 13 47.5 13H46.8789C44.9201 6.07449 38.5527 1 31 1C23.4473 1 17.0799 6.07449 15.1211 13H14.5C7.04416 13 1 19.0442 1 26.5C1 33.9558 7.04416 40 14.5 40H19"
                                            stroke="#F1C94A"
                                        />
                                        <path d="M31 47.5V17.5M31 17.5L20.5 28M31 17.5L41.5 28" stroke="#F1C94A" />
                                    </svg>
                                    <p className=" !text-[0.75rem]  !text-lightgray mt-4 text-center font-Circular-Medium">
                                        MP4, AVI, MOV etc. Max 100mb.
                                    </p>
                                    <div className="flex gap-3 mt-4 : flex-wrap ">
                                        <label className="relative">
                                            <input
                                                type="file"
                                                accept="image/*"
                                                className="w-0 absolute "
                                                onChange={(e: any) => {
                                                    setFile(e.target.files[0]);
                                                    setType('image');
                                                }}
                                            />
                                            <p className=" cursor-pointer h-[40px] w-[98px] mt-4  xs:w-full text-base !text-themecolor bg-[#2A2623] justify-center items-center  rounded-[13px] flex gap-2.5">
                                                {' '}
                                                <svg
                                                    width="20"
                                                    height="20"
                                                    viewBox="0 0 20 20"
                                                    fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M14.3338 0C17.7231 0 20 2.37811 20 5.91672V14.0833C20 17.6219 17.7231 20 14.3328 20H5.66618C2.2769 20 0 17.6219 0 14.0833V5.91672C0 2.37811 2.2769 0 5.66618 0H14.3338ZM15.4366 10.5501C14.3646 9.88132 13.5371 10.8204 13.3138 11.1207C13.0986 11.4107 12.9136 11.7306 12.7185 12.0506C12.2419 12.84 11.6958 13.7503 10.7506 14.2797C9.37699 15.0402 8.3342 14.3395 7.58404 13.8297C7.30248 13.6398 7.02897 13.4603 6.75645 13.3406C6.08473 13.0506 5.48038 13.3808 4.5834 14.5201C4.11279 15.1156 3.6462 15.7059 3.17358 16.2941C2.89102 16.646 2.95839 17.1889 3.3395 17.4241C3.94788 17.7988 4.68999 18 5.52864 18H13.9564C14.432 18 14.9087 17.935 15.3632 17.7864C16.3869 17.452 17.1994 16.6863 17.6237 15.6749C17.9817 14.8246 18.1557 13.7926 17.8208 12.934C17.7092 12.6491 17.5423 12.3839 17.308 12.1507C16.6936 11.5408 16.1194 10.9711 15.4366 10.5501ZM6.49886 4C5.12021 4 4 5.12173 4 6.5C4 7.87827 5.12021 9 6.49886 9C7.8765 9 8.99772 7.87827 8.99772 6.5C8.99772 5.12173 7.8765 4 6.49886 4Z"
                                                        fill="#F1C94A"
                                                    />
                                                </svg>
                                                <span>Image</span>
                                            </p>
                                        </label>
                                        <label className="relative">
                                            <input
                                                type="file"
                                                accept="video/*"
                                                className="w-0 absolute "
                                                onChange={(e: any) => {
                                                    setFile(e.target.files[0]);
                                                    setSrc(
                                                        URL.createObjectURL(
                                                            new Blob([e.target.files[0]], {
                                                                type: 'video/mp4'
                                                            })
                                                        )
                                                    );
                                                    setType('video');
                                                }}
                                            />
                                            <p className=" cursor-pointer h-[40px] w-[98px] mt-4 xs:w-full text-base !text-themecolor bg-[#2A2623] justify-center items-center  rounded-[13px] flex gap-2.5">
                                                {' '}
                                                <svg
                                                    width="20"
                                                    height="16"
                                                    viewBox="0 0 20 16"
                                                    fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M9.9051 0.5C12.3271 0.5 14.0181 2.16904 14.0181 4.56091V11.4391C14.0181 13.831 12.3271 15.5 9.9051 15.5H4.11304C1.69102 15.5 0 13.831 0 11.4391V4.56091C0 2.16904 1.69102 0.5 4.11304 0.5H9.9051ZM17.958 2.87898C18.397 2.65563 18.912 2.67898 19.331 2.94294C19.75 3.20589 20 3.66274 20 4.16223V11.8384C20 12.3389 19.75 12.7947 19.331 13.0577C19.102 13.2008 18.846 13.2739 18.588 13.2739C18.373 13.2739 18.158 13.2231 17.957 13.1206L16.476 12.3734C15.928 12.0952 15.588 11.5369 15.588 10.9165V5.08305C15.588 4.46173 15.928 3.90335 16.476 3.62721L17.958 2.87898Z"
                                                        fill="#F1C94A"
                                                    />
                                                </svg>
                                                <span>Video</span>
                                            </p>
                                        </label>
                                        <button
                                            type="button"
                                            className="cursor-pointer"
                                            onClick={() => {
                                                setstate(40);
                                            }}>
                                            <p className="  h-[40px] w-[98px] mt-4  xs:w-full text-base !text-themecolor bg-[#2A2623] justify-center items-center  rounded-[13px] flex gap-2.5">
                                                {' '}
                                                <svg
                                                    width="24"
                                                    height="24"
                                                    viewBox="0 0 24 24"
                                                    fill="none"
                                                    xmlns="http://www.w3.org/2000/svg">
                                                    <path
                                                        d="M15.3085 22H3.37708C3.33515 21.9862 3.29321 21.97 3.2519 21.9593C2.99717 21.9031 2.75969 21.7865 2.55948 21.6193C2.35926 21.4521 2.20217 21.2392 2.10145 20.9985C2.05002 20.8654 2.00572 20.7296 1.96875 20.5917V3.37872C2.00005 3.12835 2.14213 2.88862 2.27608 2.67205C2.52645 2.26895 2.90764 2.03298 3.37708 1.97038H16.0521C16.0152 1.96162 16.0884 1.9829 16.0521 1.97038C16.817 2.14439 17.456 2.82164 17.4579 3.60718C17.4633 5.90224 17.4633 8.19731 17.4579 10.4924C17.4579 10.7202 17.3809 10.769 17.1568 10.8135C16.8871 10.8679 16.601 10.9218 16.365 11.0538C15.1889 11.7117 14.0278 12.3964 12.8599 13.0687C12.2709 13.4086 11.9798 13.9149 11.9836 14.5941C11.9836 15.9294 11.9836 17.2647 11.9836 18.6C11.9836 19.2885 12.2759 19.7986 12.8718 20.1404C13.6567 20.5915 14.4397 21.0444 15.2209 21.4993C15.4888 21.6551 15.5094 21.7747 15.3085 22ZM11.5135 14.9583C11.5135 14.8482 11.5135 14.7706 11.5135 14.6923C11.4872 13.7472 11.8966 13.0649 12.7228 12.6017C13.5759 12.1267 14.4128 11.6253 15.2628 11.1427C15.3174 11.118 15.363 11.0769 15.3931 11.025C15.4231 10.9732 15.4362 10.9132 15.4305 10.8535C15.4262 9.16853 15.4262 7.47853 15.4262 5.78853C15.4262 5.46994 15.3686 5.41298 15.0506 5.41298H4.37731C4.06059 5.41298 4.00176 5.47056 4.00176 5.78853V14.5865C4.00176 14.8995 4.05997 14.9583 4.37731 14.9583H11.5129H11.5135ZM11.5135 18.8704H3.85467C3.80271 18.8704 3.73324 18.8579 3.70319 18.8854C3.63684 18.948 3.5536 19.025 3.54671 19.1032C3.54045 19.1696 3.61681 19.2628 3.68191 19.3117C3.73073 19.348 3.81836 19.338 3.88909 19.3386H11.4159C11.4784 19.3386 11.541 19.3336 11.6068 19.3298C11.573 19.1715 11.5454 19.0319 11.5104 18.8704H11.5135ZM11.5135 16.9926H3.8772C3.83151 16.9926 3.77016 16.9763 3.74325 16.9995C3.66751 17.0658 3.55547 17.1478 3.55547 17.2248C3.55547 17.3018 3.66376 17.3907 3.74325 17.4533C3.77955 17.4821 3.85654 17.4621 3.91538 17.4621H11.5085L11.5135 16.9926ZM5.57346 4.00464H7.2741C7.4963 4.00464 7.60897 3.92077 7.60521 3.76429C7.60146 3.60781 7.48942 3.5352 7.27723 3.5352C6.70388 3.5352 6.13053 3.5352 5.55719 3.5352C4.98384 3.5352 4.41049 3.5352 3.83714 3.5352C3.63872 3.5352 3.51917 3.63347 3.53732 3.78557C3.55735 3.95394 3.6719 4.00652 3.82838 4.0059C4.40986 4.00339 4.98822 4.00464 5.56845 4.00464H5.57346Z"
                                                        fill="#F1C94A"
                                                    />
                                                    <path
                                                        d="M22.0003 14.2936V18.8704C21.8908 19.3373 21.5766 19.6177 21.171 19.8456C20.0806 20.4577 19.0003 21.0874 17.9206 21.719C17.4536 21.9925 17.0042 21.9919 16.5373 21.719C15.4068 21.0588 14.2731 20.4045 13.136 19.7561C12.6722 19.4913 12.4475 19.1101 12.4512 18.575C12.4591 17.2643 12.4591 15.9538 12.4512 14.6435C12.4475 14.1002 12.6709 13.714 13.1397 13.4455C14.2664 12.8045 15.3885 12.1563 16.506 11.5007C16.9936 11.2134 17.453 11.2091 17.9412 11.497C18.9903 12.1154 20.0454 12.7238 21.1065 13.3222C21.5196 13.55 21.8651 13.8204 22.0003 14.2936ZM15.3499 16.853L15.3142 16.8668C15.0175 16.3723 14.7189 15.8785 14.4235 15.3827C14.3522 15.2632 14.272 15.1605 14.1156 15.2043C13.9591 15.2482 13.9397 15.3733 13.9403 15.5173C13.9403 16.1432 13.9403 16.7692 13.9403 17.3951C13.9403 17.5203 13.9403 17.6455 13.9403 17.7663C13.9453 17.9108 14.021 18.006 14.1669 18.0091C14.3234 18.0122 14.401 17.914 14.4072 17.7587C14.4072 17.6962 14.4072 17.6286 14.4072 17.5635V16.2872C14.4698 16.3905 14.5068 16.4431 14.5393 16.4969C14.8078 16.9432 15.077 17.3888 15.343 17.8364C15.4118 17.9515 15.4957 18.0392 15.6409 17.9985C15.7862 17.9578 15.8168 17.8445 15.8168 17.7074C15.8143 16.9713 15.8143 16.2352 15.8168 15.4992C15.8168 15.3358 15.7693 15.2125 15.5884 15.1968C15.4369 15.1837 15.348 15.3014 15.3474 15.5048C15.3486 15.9542 15.3499 16.4036 15.3499 16.853ZM16.7657 15.6638C17.1519 15.6638 17.5168 15.6638 17.8805 15.6638C18.0395 15.6638 18.1572 15.6012 18.1609 15.4341C18.1647 15.2669 18.0539 15.1943 17.893 15.1937C17.4499 15.1937 17.0067 15.1937 16.5636 15.1937C16.3758 15.1937 16.2906 15.2795 16.29 15.4716C16.29 16.2271 16.29 16.9832 16.29 17.7387C16.2897 17.7766 16.297 17.8142 16.3114 17.8492C16.3258 17.8842 16.347 17.916 16.3739 17.9428C16.4315 17.9853 16.5535 18.0141 16.5999 17.9816C16.6795 17.9233 16.733 17.8361 16.7488 17.7387C16.7676 17.4689 16.7557 17.1967 16.7557 16.9137H17.0555C17.2965 16.9137 17.5381 16.9188 17.7791 16.9137C17.8105 16.9155 17.8419 16.9103 17.8711 16.8987C17.9004 16.8871 17.9267 16.8693 17.9484 16.8465C17.97 16.8237 17.9865 16.7965 17.9966 16.7667C18.0067 16.7369 18.0102 16.7053 18.0069 16.674C18.0032 16.5382 17.9168 16.4618 17.7816 16.4499C17.719 16.4437 17.6514 16.4499 17.5863 16.4499H16.767L16.7657 15.6638ZM19.8096 15.6638C19.9648 15.6638 20.0938 15.6638 20.2233 15.6638C20.4111 15.66 20.5238 15.5668 20.51 15.4209C20.4944 15.2532 20.3848 15.1937 20.2258 15.1943C19.7877 15.1943 19.3533 15.1943 18.917 15.1943C18.7574 15.1943 18.6423 15.2569 18.6416 15.4272C18.641 15.5974 18.7543 15.6638 18.9139 15.6638H19.3402V17.0608C19.3402 17.2824 19.3402 17.504 19.3402 17.7249C19.3402 17.8839 19.4028 17.9935 19.5693 18.0072C19.7151 18.0198 19.8052 17.9058 19.8102 17.7181C19.8102 17.6599 19.8102 17.601 19.8102 17.5422L19.8096 15.6638Z"
                                                        fill="#F1C94A"
                                                    />
                                                    <path
                                                        d="M17.9301 7.54489V4.43529C17.9301 4.0879 18.0653 4.0034 18.3833 4.15112C19.2271 4.54379 20.0706 4.93687 20.9139 5.33037C21.8484 5.76851 22.1858 6.69426 21.7508 7.6319C21.1295 8.97221 20.5052 10.3113 19.878 11.6491C19.756 11.9114 19.6521 11.9452 19.4061 11.8037C18.9823 11.5602 18.5623 11.3117 18.1354 11.0739C18.0681 11.0421 18.0121 10.9906 17.9749 10.9262C17.9376 10.8618 17.9209 10.7875 17.927 10.7133C17.9333 9.65739 17.9301 8.60083 17.9301 7.54489Z"
                                                        fill="#F1C94A"
                                                    />
                                                    <path
                                                        d="M11.9526 9.87655C11.9426 10.1976 11.8437 10.4073 11.6253 10.5357C11.1032 10.8424 10.5775 11.1426 10.0479 11.4364C9.94269 11.4964 9.8232 11.527 9.70203 11.525C9.58087 11.5229 9.4625 11.4881 9.3594 11.4245C8.85428 11.1397 8.34979 10.8542 7.84904 10.5619C7.48789 10.351 7.37647 9.9479 7.58491 9.58299C8.08565 8.70669 8.59035 7.83248 9.09902 6.96036C9.39508 6.45962 10.0473 6.45962 10.344 6.9685C10.8514 7.83353 11.3521 8.70231 11.8462 9.57485C11.892 9.67146 11.9277 9.77257 11.9526 9.87655Z"
                                                        fill="#F1C94A"
                                                    />
                                                    <path
                                                        d="M9.71606 13.8261C9.61121 13.8267 9.50755 13.8037 9.41283 13.7587C9.31811 13.7138 9.23476 13.648 9.169 13.5663C8.6449 12.935 8.12329 12.3022 7.60419 11.6679C7.45334 11.4839 7.44958 11.2923 7.57978 11.1352C7.70997 10.9781 7.91841 10.9518 8.12559 11.0808C8.58439 11.3656 9.04382 11.6504 9.49636 11.9452C9.56009 11.9952 9.63878 12.0224 9.71982 12.0224C9.80085 12.0224 9.87954 11.9952 9.94327 11.9452C10.3852 11.6572 10.8333 11.3818 11.2796 11.0995C11.505 10.9587 11.7053 10.9681 11.8467 11.1215C11.9882 11.2748 11.9838 11.4876 11.8079 11.7011C11.3034 12.3145 10.7977 12.9272 10.2907 13.5394C10.2233 13.628 10.1364 13.7 10.0368 13.7497C9.93714 13.7994 9.82741 13.8255 9.71606 13.8261V13.8261Z"
                                                        fill="#F1C94A"
                                                    />
                                                </svg>
                                                <span>NFT</span>
                                            </p>
                                        </button>
                                    </div>
                                </div>

                                <div className="flex flex-col justify-center items-center w-[100%] h-[100%]">
                                    <div className="flex gap-3 mt-4 : flex-wrap "></div>
                                </div>
                            </>
                        )}
                    </>
                )}
                <div className="mt-8 ">
                    <Button
                        type="button"
                        className="w-full rounded-full gold"
                        onClick={UploadImage}
                        isLoading={loading}
                        disabled={loading}>
                        Post
                    </Button>
                </div>
            </div>
        </div>
    );
};

export default Uploadimg;
